# -*- coding: utf-8 -*-
"""TripFare_visual.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1v_vlT8NQxRcgyV3hzJMV4Bf2CEZvdm3q
"""

import streamlit as st
import numpy as np
import pickle

# Load your trained model (replace with your model path)
# brain = pickle.load(open('Fare.pkl', 'rb'))

st.title("Taxi Fare Prediction App")

# Column layout
col1, col2 = st.columns(2)

# VendorID mapping
vendor_map = {"Uber": 1, "VeriFone": 2}
VendorID = col1.selectbox("VendorID", list(vendor_map.keys()))
VendorID_val = vendor_map[VendorID]

# Passenger count mapping
passenger_count = col2.selectbox("Passenger Count", list(range(0, 7)))

# RatecodeID mapping
ratecode_map = {
    "Standard rate": 1,
    "JFK Airport": 2,
    "Newark Airport": 3,
    "Nassau/Westchester": 4,
    "Negotiated fare": 5,
    "Group ride": 6,
    "Unknown": 99
}
RatecodeID = col1.selectbox("RatecodeID", list(ratecode_map.keys()))
RatecodeID_val = ratecode_map[RatecodeID]

# Store and forward flag mapping
store_map = {"N": 0, "Y": 1}
store_and_fwd_flag = col2.selectbox("Store and Fwd Flag", list(store_map.keys()))
store_val = store_map[store_and_fwd_flag]

# Payment type mapping (same as RatecodeID per user request)
payment_map = {
    "Credit Card": 1,
    "Cash": 2,
    "No Charge": 3,
    "Dispute": 4
}
payment_type = col1.selectbox("Payment Type", list(payment_map.keys()))
payment_val = payment_map[payment_type]

# Pickup AM/PM
pickup_ampm_map = {"PM": 1, "AM": 0}
pickup_ampm = col2.selectbox("Pickup AM/PM", list(pickup_ampm_map.keys()))
pickup_ampm_val = pickup_ampm_map[pickup_ampm]

# Dropoff AM/PM
dropoff_ampm_map = {"PM": 1, "AM": 0}
dropoff_ampm = col1.selectbox("Dropoff AM/PM", list(dropoff_ampm_map.keys()))
dropoff_ampm_val = dropoff_ampm_map[dropoff_ampm]

# Pickup is night
pickup_is_night_map = {"Yes": 1, "No": 0}
pickup_is_night = col2.selectbox("Pickup is Night", list(pickup_is_night_map.keys()))
pickup_is_night_val = pickup_is_night_map[pickup_is_night]

# Dropoff is night
dropoff_is_night_map = {"Yes": 1, "No": 0}
dropoff_is_night = col1.selectbox("Dropoff is Night", list(dropoff_is_night_map.keys()))
dropoff_is_night_val = dropoff_is_night_map[dropoff_is_night]

# Trip distance
trip_distance_new = col2.number_input("Trip Distance (miles)", min_value=0.0, step=0.1)

# Trip duration
trip_duration_new = col1.number_input("Trip Duration (minutes)", min_value=0.0, step=1.0)

# Prediction button
if st.button("Predict Fare"):
    # Arrange features
    features = np.array([[VendorID_val, passenger_count, RatecodeID_val,
                          store_val, payment_val, pickup_ampm_val,
                          dropoff_ampm_val, pickup_is_night_val,
                          dropoff_is_night_val, trip_distance_new,
                          trip_duration_new]])

    # Dummy output for now (replace with model.predict(features))
    # prediction = brain.predict(features)[0]
    prediction = round(trip_distance_new * 2 + trip_duration_new * 0.5 + 5, 2)  # Dummy formula

    st.success(f"Predicted Total Amount: ${prediction}")
